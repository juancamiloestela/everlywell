{"version":3,"sources":["components/RecipeDetailPage/RecipeDetailPage.jsx","components/RecipeDetailPage/index.js","functions/recipes.js","components/RecipeDetailPage/RecipeDetailPage.module.scss"],"names":["favorites","JSON","parse","localStorage","getItem","RecipeDetailPage","id","useParams","useState","recipe","setRecipe","includes","isFavorite","setFavorite","useEffect","a","getRecipe","ingredients","Object","keys","filter","key","test","map","name","measure","replace","fetchData","push","v","setItem","stringify","className","styles","Header","to","icon","faArrowLeft","faHeart","classnames","FavoriteIcon","Active","onClick","alt","strMeal","style","backgroundImage","strMealThumb","RecipeThumbnail","Body","ingredient","i","strInstructions","axios","get","response","data","meals","getRandomRecipe","cacheBuster","Date","now","getRandomRecipes","n","recipes","Array","Promise","all","searchRecipeByName","search","module","exports"],"mappings":"qPAUIA,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,MAiFjDC,MA7Ef,WAA6B,IAEnBC,EAAOC,cAAPD,GAFkB,EAGEE,mBAAS,IAHX,mBAGnBC,EAHmB,KAGXC,EAHW,OAIQF,mBAASR,EAAUW,SAASL,IAJpC,mBAInBM,EAJmB,KAIPC,EAJO,KAsC1B,OAhCAC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACuBC,YAAUV,GADjC,QACQG,EADR,QAGSQ,YAAcC,OAAOC,KAAKV,GAEVW,QAAO,SAAAC,GAAG,MAAI,gBAAgBC,KAAKD,IAAQZ,EAAOY,MAElDE,KAAI,SAAAF,GACH,MAAO,CACLG,KAAMf,EAAOY,GACbI,QAAShB,EAAOY,EAAIK,QAAQ,aAAc,gBAIpEhB,EAAUD,GAdZ,4CADc,uBAAC,WAAD,wBAkBdkB,KACC,CAACrB,IAGJQ,qBAAU,WACJF,GACDZ,EAAUW,SAASL,IAAON,EAAU4B,KAAKtB,GAE1CN,EAAYA,EAAUoB,QAAO,SAAAS,GAAC,OAAIA,IAAMvB,KAE1CH,aAAa2B,QAAQ,YAAa7B,KAAK8B,UAAU/B,MAChD,CAACM,EAAIM,IAIN,sBAAKoB,UAAWC,IAAO5B,iBAAvB,UAEE,sBAAK2B,UAAWC,IAAOC,OAAvB,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAAC,IAAD,CAAiBC,KAAMC,QAEzB,cAAC,IAAD,CACED,KAAME,IACNN,UACEO,IAAWN,IAAOO,aAAR,eAAwBP,IAAOQ,OAAS7B,IACpD8B,QAAS,kBAAM7B,GAAaD,SAIhC,qBACE+B,IAAKlC,EAAOmC,QACZC,MAAO,CAACC,gBAAgB,OAAD,OAASrC,EAAOsC,aAAhB,MACvBf,UAAWC,IAAOe,kBAGpB,sBAAKhB,UAAWC,IAAOgB,KAAvB,UACE,6BAAKxC,EAAOmC,UAEZ,6BACGnC,EAAOQ,aAAeR,EAAOQ,YAAYM,KAAI,SAAC2B,EAAYC,GACzD,OACE,+BAAaD,EAAWzB,QAAxB,IAAkCyB,EAAW1B,OAApC2B,QAKf,4CACA,8BAAM1C,EAAO2C,yBCpFN/C,a,4LCCR,SAAeW,EAAtB,kC,4CAAO,WAAyBV,GAAzB,eAAAS,EAAA,sEACkBsC,IAAMC,IAAI,wDAA0DhD,GADtF,cACCiD,EADD,yBAEEA,EAASC,KAAKC,MAAM,IAFtB,4C,sBAKA,SAAeC,IAAtB,+B,4CAAO,8BAAA3C,EAAA,6DACC4C,EAAcC,KAAKC,MADpB,SAEkBR,IAAMC,IAAI,wDAA0DK,GAFtF,cAECJ,EAFD,yBAGEA,EAASC,KAAKC,MAAM,IAHtB,4C,sBAMA,SAAeK,EAAtB,kC,4CAAO,WAAgCC,GAAhC,eAAAhD,EAAA,6DACCiD,EAAU,YAAIC,MAAMF,IAAIxC,KAAI,SAAA4B,GAAC,OAAIO,OADlC,kBAGUQ,QAAQC,IAAIH,GAHtB,iGAKI,MALJ,0D,sBASA,SAAeI,EAAtB,kC,4CAAO,WAAkCC,GAAlC,eAAAtD,EAAA,sEACkBsC,IAAMC,IAAI,wDAA0De,GADtF,cACCd,EADD,yBAEEA,EAASC,KAAKC,OAFhB,4C,2CCrBPa,EAAOC,QAAU,CAAC,OAAS,iCAAiC,aAAe,uCAAuC,OAAS,iCAAiC,gBAAkB,0CAA0C,KAAO","file":"static/js/6.ee8a8f92.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from './RecipeDetailPage.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { useParams } from \"react-router-dom\";\nimport classnames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { getRecipe } from 'functions/recipes';\n\n\nlet favorites = JSON.parse(localStorage.getItem('favorites') || \"[]\");\n\n\n\nfunction RecipeDetailPage() {\n  \n  const { id } = useParams();\n  const [recipe, setRecipe] = useState({});\n  const [isFavorite, setFavorite] = useState(favorites.includes(id));\n\n  useEffect(() => {\n    async function fetchData(){\n      const recipe = await getRecipe(id);\n      // Map ingredients to a digested structure only once\n      recipe.ingredients = Object.keys(recipe)\n                            // get strIngredient[0-9] keys that are truthy\n                            .filter(key => /strIngredient/.test(key) && recipe[key])\n                            // for each of the Ingredients, get also the measurement\n                            .map(key => {\n                              return {\n                                name: recipe[key],\n                                measure: recipe[key.replace(\"Ingredient\", \"Measure\")]\n                              };\n                            });\n\n      setRecipe(recipe);\n    }\n\n    fetchData();\n  }, [id]);\n\n\n  useEffect(() => {\n    if (isFavorite){\n      !favorites.includes(id) && favorites.push(id);\n    }else{\n      favorites = favorites.filter(v => v !== id);\n    }\n    localStorage.setItem('favorites', JSON.stringify(favorites));\n  }, [id, isFavorite]);\n\n\n  return (\n    <div className={styles.RecipeDetailPage}>\n      \n      <div className={styles.Header}>\n        <Link to=\"/\">\n          <FontAwesomeIcon icon={faArrowLeft} />\n        </Link>\n        <FontAwesomeIcon \n          icon={faHeart} \n          className={\n            classnames(styles.FavoriteIcon, {[styles.Active]: isFavorite})} \n          onClick={() => setFavorite(!isFavorite)}\n          />\n      </div>\n\n      <div \n        alt={recipe.strMeal} \n        style={{backgroundImage: `url(${recipe.strMealThumb})`}} \n        className={styles.RecipeThumbnail}>\n      </div>\n\n      <div className={styles.Body}>\n        <h1>{recipe.strMeal}</h1>\n\n        <ul>\n          {recipe.ingredients && recipe.ingredients.map((ingredient, i) => {\n            return (\n              <li key={i}>{ingredient.measure} {ingredient.name}</li>\n            );\n          })}\n        </ul>\n\n        <h2>Directions</h2>\n        <div>{recipe.strInstructions}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default RecipeDetailPage;\n","import RecipeDetailPage from './RecipeDetailPage.jsx';\nexport default RecipeDetailPage;","import axios from 'axios';\n\nexport async function getRecipe(id){\n  const response = await axios.get(\"https://www.themealdb.com/api/json/v1/1/lookup.php?i=\" + id);\n  return response.data.meals[0];\n}\n\nexport async function getRandomRecipe(){\n  const cacheBuster = Date.now();\n  const response = await axios.get(\"https://www.themealdb.com/api/json/v1/1/random.php?t=\" + cacheBuster);\n  return response.data.meals[0];\n}\n\nexport async function getRandomRecipes(n){\n  const recipes = [...Array(n)].map(i => getRandomRecipe());\n  try {\n    return await Promise.all(recipes);\n  }catch(error){\n    return null;\n  }\n}\n\nexport async function searchRecipeByName(search){\n  const response = await axios.get(\"https://www.themealdb.com/api/json/v1/1/search.php?s=\" + search);\n  return response.data.meals;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"RecipeDetailPage_Header__14VTk\",\"FavoriteIcon\":\"RecipeDetailPage_FavoriteIcon__1knDz\",\"Active\":\"RecipeDetailPage_Active__2Y5kb\",\"RecipeThumbnail\":\"RecipeDetailPage_RecipeThumbnail__3Bct9\",\"Body\":\"RecipeDetailPage_Body__3Y0xb\"};"],"sourceRoot":""}